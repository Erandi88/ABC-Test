{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst Customerlist = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  const [page, setPage] = useState(1); // Current page\n  const [itemsPerPage] = useState(10); // Items displayed per page\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(targetUrl);\n        const data = await response.json();\n        setCustomers(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Calculate the index range for the current page\n  const startIndex = (page - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const pagedCustomers = customers.slice(startIndex, endIndex);\n  const handleEdit = customerId => {\n    // Implement your edit logic here\n    console.log(`Edit customer with ID ${customerId}`);\n  };\n  const handleDelete = customerId => {\n    // Open the delete confirmation modal\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      // Make an API call to confirm the deletion\n      const confirmResponse = await fetch(`${targetUrl}/confirm-delete/${customerToDelete}`, {\n        method: 'GET'\n      });\n      if (confirmResponse.ok) {\n        // Perform the deletion if confirmed\n        const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          // Fetch the updated customer list\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n\n          // Close the confirmation modal\n          setDeletionConfirmation(false);\n        } else {\n          console.error('Error deleting customer');\n        }\n      } else {\n        console.log('Deletion not confirmed.');\n        // Close the confirmation modal\n        setDeletionConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewCustomerData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewCustomer = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCustomerData)\n      });\n      if (response.ok) {\n        // Fetch the updated customer list\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n\n        // Close the modal\n        handleCloseModal();\n      } else {\n        console.error('Error saving new customer');\n      }\n    } catch (error) {\n      console.error('Error saving new customer:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewCustomer,\n      children: \"New Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: pagedCustomers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              icon: \"edit\",\n              color: \"blue\",\n              onClick: () => handleEdit(customer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"delete\",\n              color: \"red\",\n              onClick: () => handleDelete(customer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        disabled: page === 1,\n        onClick: () => setPage(page - 1),\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        disabled: endIndex >= customers.length,\n        onClick: () => setPage(page + 1),\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: newCustomerData.name,\n              onChange: handleInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: newCustomerData.address,\n              onChange: handleInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveNewCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: deletionConfirmation,\n      onClose: () => setDeletionConfirmation(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this customer?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: () => setDeletionConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: confirmDelete,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n_s(Customerlist, \"NdEcRvfSKyFLUkD2ycqG9thM3bI=\");\n_c = Customerlist;\nexport default Customerlist;\nvar _c;\n$RefreshReg$(_c, \"Customerlist\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","jsxDEV","_jsxDEV","targetUrl","Customerlist","_s","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","page","setPage","itemsPerPage","fetchData","response","fetch","data","json","error","console","startIndex","endIndex","pagedCustomers","slice","handleEdit","customerId","log","handleDelete","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleInputChange","e","value","prevData","children","primary","onClick","fileName","_jsxFileName","lineNumber","columnNumber","celled","Header","Row","HeaderCell","Body","map","customer","Cell","icon","color","id","disabled","length","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst Customerlist = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n    const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n    const [page, setPage] = useState(1); // Current page\r\n    const [itemsPerPage] = useState(10); // Items displayed per page\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(targetUrl);\r\n                const data = await response.json();\r\n                setCustomers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Calculate the index range for the current page\r\n    const startIndex = (page - 1) * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n\r\n    const pagedCustomers = customers.slice(startIndex, endIndex);\r\n\r\n    const handleEdit = (customerId) => {\r\n        // Implement your edit logic here\r\n        console.log(`Edit customer with ID ${customerId}`);\r\n    };\r\n\r\n    const handleDelete = (customerId) => {\r\n        // Open the delete confirmation modal\r\n        setCustomerToDelete(customerId);\r\n        setDeletionConfirmation(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            // Make an API call to confirm the deletion\r\n            const confirmResponse = await fetch(`${targetUrl}/confirm-delete/${customerToDelete}`, {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (confirmResponse.ok) {\r\n                // Perform the deletion if confirmed\r\n                const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Fetch the updated customer list\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n\r\n                    // Close the confirmation modal\r\n                    setDeletionConfirmation(false);\r\n                } else {\r\n                    console.error('Error deleting customer');\r\n                }\r\n            } else {\r\n                console.log('Deletion not confirmed.');\r\n                // Close the confirmation modal\r\n                setDeletionConfirmation(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleNewCustomer = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n        setNewCustomerData({ name: '', address: '' });\r\n    };\r\n\r\n    const handleSaveNewCustomer = async () => {\r\n        try {\r\n            const response = await fetch(targetUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newCustomerData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Fetch the updated customer list\r\n                const updatedResponse = await fetch(targetUrl);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData);\r\n\r\n                // Close the modal\r\n                handleCloseModal();\r\n            } else {\r\n                console.error('Error saving new customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving new customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, { name, value }) => {\r\n        setNewCustomerData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button primary onClick={handleNewCustomer}>\r\n                New Customer\r\n            </Button>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {pagedCustomers.map((customer) => (\r\n                        <Table.Row key={customer.id}>\r\n                            <Table.Cell>{customer.name}</Table.Cell>\r\n                            <Table.Cell>{customer.address}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button icon=\"edit\" color=\"blue\" onClick={() => handleEdit(customer.id)} />\r\n                                <Button icon=\"delete\" color=\"red\" onClick={() => handleDelete(customer.id)} />\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            {/* Add pagination controls */}\r\n            <div>\r\n                <Button\r\n                    primary\r\n                    disabled={page === 1}\r\n                    onClick={() => setPage(page - 1)}\r\n                >\r\n                    Previous Page\r\n                </Button>\r\n                <Button\r\n                    primary\r\n                    disabled={endIndex >= customers.length}\r\n                    onClick={() => setPage(page + 1)}\r\n                >\r\n                    Next Page\r\n                </Button>\r\n            </div>\r\n\r\n            <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                <Modal.Header>Create New Customer</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={newCustomerData.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={newCustomerData.address}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleSaveNewCustomer}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCloseModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                <Modal.Header>Confirm Deletion</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Are you sure you want to delete this customer?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button positive onClick={confirmDelete}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customerlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}