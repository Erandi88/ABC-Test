{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input, Menu, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst CustomerList = () => {\n  var _s = $RefreshSig$();\n  const itemsPerPage = 1; // Change this to the number of items per page\n  const yourData = [1, 2, 3, 7, 9, 0, 5]; // Replace with your data array\n\n  const PaginatedTable = () => {\n    _s();\n    const [activePage, setActivePage] = useState(1);\n    const totalPages = Math.ceil(yourData.length / itemsPerPage);\n    const handlePageChange = (e, {\n      page\n    }) => {\n      setActivePage(page);\n    };\n    const paginatedData = yourData.slice((activePage - 1) * itemsPerPage, activePage * itemsPerPage);\n    const tableRows = paginatedData.map((item, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n    const [customers, setCustomers] = useState([]);\n    const [modalOpen, setModalOpen] = useState(false);\n    const [newCustomerData, setNewCustomerData] = useState({\n      name: '',\n      address: ''\n    });\n\n    // New state variables for editing\n    const [editingCustomer, setEditingCustomer] = useState(null);\n    const [editModalOpen, setEditModalOpen] = useState(false);\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n    const [customerToDelete, setCustomerToDelete] = useState(null);\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(targetUrl);\n          const data = await response.json();\n          setCustomers(data);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      };\n      fetchData();\n    }, []);\n    const handleDelete = customerId => {\n      setCustomerToDelete(customerId);\n      setDeletionConfirmation(true);\n    };\n    const confirmDelete = async () => {\n      try {\n        const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'GET'\n        });\n        if (confirmResponse.ok) {\n          const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n            method: 'DELETE'\n          });\n          if (response.ok) {\n            const updatedResponse = await fetch(targetUrl);\n            const updatedData = await updatedResponse.json();\n            setCustomers(updatedData);\n            setDeletionConfirmation(false);\n          } else {\n            console.error('Error deleting customer');\n          }\n        } else {\n          console.log('Deletion not confirmed.');\n          setDeletionConfirmation(false);\n        }\n      } catch (error) {\n        console.error('Error deleting customer:', error);\n      }\n    };\n    const handleNewCustomer = () => {\n      setModalOpen(true);\n    };\n    const handleCloseModal = () => {\n      setModalOpen(false);\n      setNewCustomerData({\n        name: '',\n        address: ''\n      });\n    };\n    const handleSaveNewCustomer = async () => {\n      try {\n        const response = await fetch(targetUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newCustomerData)\n        });\n        if (response.ok) {\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n          handleCloseModal();\n        } else {\n          console.error('Error saving new customer');\n        }\n      } catch (error) {\n        console.error('Error saving new customer:', error);\n      }\n    };\n    const handleEdit = customer => {\n      setEditingCustomer(customer);\n      setEditModalOpen(true);\n    };\n    const handleCloseEditModal = () => {\n      setEditModalOpen(false);\n      setEditingCustomer(null);\n    };\n    const handleSaveEditCustomer = async () => {\n      try {\n        console.log(editingCustomer.id);\n        const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(editingCustomer)\n        });\n        alert(response.statusText);\n        if (response.ok) {\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n          handleCloseEditModal();\n        } else {\n          console.error('Error editing customer');\n        }\n      } catch (error) {\n        console.error('Error editing customer:', error);\n      }\n    };\n    const handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      setNewCustomerData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    };\n    const handleEditInputChange = (e, {\n      name,\n      value\n    }) => {\n      setEditingCustomer(prevCustomer => ({\n        ...prevCustomer,\n        [name]: value\n      }));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: handleNewCustomer,\n        children: \"New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        celled: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"yellow\",\n                onClick: () => handleEdit(customer),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"edit icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '5px'\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                onClick: () => handleDelete(customer.id),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"delete icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '5px'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this)]\n          }, customer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            colSpan: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Menu, {\n              floated: \"right\",\n              pagination: true,\n              children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                icon: true,\n                onClick: handlePageChange,\n                disabled: activePage === 1,\n                page: activePage - 1,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"chevron left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), Array.from({\n                length: totalPages\n              }, (_, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                active: index + 1 === activePage,\n                onClick: handlePageChange,\n                page: index + 1,\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                icon: true,\n                onClick: handlePageChange,\n                disabled: activePage === totalPages,\n                page: activePage + 1,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"chevron right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: modalOpen,\n        onClose: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Create New Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: newCustomerData.name,\n                onChange: handleInputChange,\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                value: newCustomerData.address,\n                onChange: handleInputChange,\n                placeholder: \"Enter address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: handleSaveNewCustomer,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: editModalOpen,\n        onClose: handleCloseEditModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Edit Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: editingCustomer ? editingCustomer.name : '',\n                onChange: handleEditInputChange,\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                value: editingCustomer ? editingCustomer.address : '',\n                onChange: handleEditInputChange,\n                placeholder: \"Enter address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: handleSaveEditCustomer,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseEditModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: deletionConfirmation,\n        onClose: () => setDeletionConfirmation(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this customer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            negative: true,\n            onClick: () => setDeletionConfirmation(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            positive: true,\n            onClick: confirmDelete,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  };\n  _s(PaginatedTable, \"RC1kKxY0/CJiV/Rz/j06HaF7Xkw=\");\n};\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","Menu","Icon","jsxDEV","_jsxDEV","targetUrl","CustomerList","_s","$RefreshSig$","itemsPerPage","yourData","PaginatedTable","activePage","setActivePage","totalPages","Math","ceil","length","handlePageChange","e","page","paginatedData","slice","tableRows","map","item","index","Row","children","Cell","name","fileName","_jsxFileName","lineNumber","columnNumber","description","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","address","editingCustomer","setEditingCustomer","editModalOpen","setEditModalOpen","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","fetchData","response","fetch","data","json","error","console","handleDelete","customerId","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","log","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleEdit","customer","handleCloseEditModal","handleSaveEditCustomer","id","alert","statusText","handleInputChange","value","prevData","handleEditInputChange","prevCustomer","primary","onClick","celled","Header","HeaderCell","Body","color","className","style","marginRight","Footer","colSpan","floated","pagination","Item","as","icon","disabled","Array","from","_","active","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input, Menu, Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst CustomerList = () => {\r\n\r\n    const itemsPerPage = 1; // Change this to the number of items per page\r\n    const yourData = [1, 2, 3, 7, 9, 0, 5]; // Replace with your data array\r\n\r\n    const PaginatedTable = () => {\r\n        const [activePage, setActivePage] = useState(1);\r\n        const totalPages = Math.ceil(yourData.length / itemsPerPage);\r\n\r\n        const handlePageChange = (e, { page }) => {\r\n            setActivePage(page);\r\n        };\r\n\r\n        const paginatedData = yourData.slice(\r\n            (activePage - 1) * itemsPerPage,\r\n            activePage * itemsPerPage\r\n        );\r\n\r\n        const tableRows = paginatedData.map((item, index) => (\r\n            <Table.Row key={index}>\r\n                <Table.Cell>{item.name}</Table.Cell>\r\n                <Table.Cell>{item.description}</Table.Cell>\r\n                {/* Add more columns for your data */}\r\n            </Table.Row>\r\n        ));\r\n\r\n        const [customers, setCustomers] = useState([]);\r\n        const [modalOpen, setModalOpen] = useState(false);\r\n        const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n        // New state variables for editing\r\n        const [editingCustomer, setEditingCustomer] = useState(null);\r\n        const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n        const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n        const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n        useEffect(() => {\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await fetch(targetUrl);\r\n                    const data = await response.json();\r\n                    setCustomers(data);\r\n                } catch (error) {\r\n                    console.error('Error fetching data:', error);\r\n                }\r\n            };\r\n\r\n            fetchData();\r\n        }, []);\r\n\r\n        const handleDelete = (customerId) => {\r\n            setCustomerToDelete(customerId);\r\n            setDeletionConfirmation(true);\r\n        };\r\n\r\n        const confirmDelete = async () => {\r\n            try {\r\n                const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'GET',\r\n                });\r\n\r\n                if (confirmResponse.ok) {\r\n                    const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                        method: 'DELETE',\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        const updatedResponse = await fetch(targetUrl);\r\n                        const updatedData = await updatedResponse.json();\r\n                        setCustomers(updatedData);\r\n                        setDeletionConfirmation(false);\r\n                    } else {\r\n                        console.error('Error deleting customer');\r\n                    }\r\n                } else {\r\n                    console.log('Deletion not confirmed.');\r\n                    setDeletionConfirmation(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error deleting customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleNewCustomer = () => {\r\n            setModalOpen(true);\r\n        };\r\n\r\n        const handleCloseModal = () => {\r\n            setModalOpen(false);\r\n            setNewCustomerData({ name: '', address: '' });\r\n        };\r\n\r\n        const handleSaveNewCustomer = async () => {\r\n            try {\r\n                const response = await fetch(targetUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(newCustomerData),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n                    handleCloseModal();\r\n                } else {\r\n                    console.error('Error saving new customer');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error saving new customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleEdit = (customer) => {\r\n            setEditingCustomer(customer);\r\n            setEditModalOpen(true);\r\n        };\r\n\r\n        const handleCloseEditModal = () => {\r\n            setEditModalOpen(false);\r\n            setEditingCustomer(null);\r\n        };\r\n\r\n        const handleSaveEditCustomer = async () => {\r\n\r\n            try {\r\n                console.log(editingCustomer.id);\r\n                const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(editingCustomer),\r\n\r\n                });\r\n\r\n                alert(response.statusText);\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n                    handleCloseEditModal();\r\n                } else {\r\n                    console.error('Error editing customer');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error editing customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleInputChange = (e, { name, value }) => {\r\n            setNewCustomerData((prevData) => ({\r\n                ...prevData,\r\n                [name]: value,\r\n            }));\r\n        };\r\n\r\n        const handleEditInputChange = (e, { name, value }) => {\r\n            setEditingCustomer((prevCustomer) => ({\r\n                ...prevCustomer,\r\n                [name]: value,\r\n            }));\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Button primary onClick={handleNewCustomer}>\r\n                    New Customer\r\n                </Button>\r\n\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Address</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {customers.map((customer) => (\r\n                            <Table.Row key={customer.id}>\r\n                                <Table.Cell>{customer.name}</Table.Cell>\r\n                                <Table.Cell>{customer.address}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"yellow\" onClick={() => handleEdit(customer)}>\r\n                                        <i className=\"edit icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"red\" onClick={() => handleDelete(customer.id)}>\r\n                                        <i className=\"delete icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan=\"3\">\r\n                            <Menu floated=\"right\" pagination>\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === 1}\r\n                                    page={activePage - 1}\r\n                                >\r\n                                    <Icon name=\"chevron left\" />\r\n                                </Menu.Item>\r\n                                {Array.from({ length: totalPages }, (_, index) => (\r\n                                    <Menu.Item\r\n                                        as=\"a\"\r\n                                        key={index}\r\n                                        active={index + 1 === activePage}\r\n                                        onClick={handlePageChange}\r\n                                        page={index + 1}\r\n                                    >\r\n                                        {index + 1}\r\n                                    </Menu.Item>\r\n                                ))}\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === totalPages}\r\n                                    page={activePage + 1}\r\n                                >\r\n                                    <Icon name=\"chevron right\" />\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n\r\n                <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                    <Modal.Header>Create New Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={newCustomerData.name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={newCustomerData.address}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveNewCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={editModalOpen} onClose={handleCloseEditModal}>\r\n                    <Modal.Header>Edit Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={editingCustomer ? editingCustomer.name : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={editingCustomer ? editingCustomer.address : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveEditCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseEditModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                    <Modal.Header>Confirm Deletion</Modal.Header>\r\n                    <Modal.Content>\r\n                        <p>Are you sure you want to delete this customer?</p>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button positive onClick={confirmDelete}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}