{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\storelist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Store';\nconst StoreList = () => {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newStoreData, setNewStoreData] = useState({\n    name: '',\n    address: ''\n  });\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [editStoreData, setEditStoreData] = useState({\n    id: null,\n    name: '',\n    address: ''\n  });\n  const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\n  const [storeIdToDelete, setStoreIdToDelete] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const data = await response.json();\n        setStores(data.stores);\n        setTotalPages(data.totalPages);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [currentPage]);\n  const handleEdit = store => {\n    setEditStoreData({\n      id: store.id,\n      name: store.name,\n      address: store.address\n    });\n    setEditModalOpen(true);\n  };\n  const openDeleteConfirmation = storeId => {\n    setStoreIdToDelete(storeId);\n    setDeleteConfirmationOpen(true);\n  };\n  const confirmDelete = async () => {\n    if (storeIdToDelete !== null) {\n      try {\n        const response = await fetch(`${targetUrl}/${storeIdToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n          const updatedData = await updatedResponse.json();\n          setStores(updatedData.stores);\n          setStores(updatedData.totalPages);\n          setDeleteConfirmationOpen(false);\n        } else {\n          console.error('Error deleting store');\n        }\n      } catch (error) {\n        console.error('Error deleting store:', error);\n      }\n    }\n  };\n  const handleNewStore = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewStoreData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewStore = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newStoreData)\n      });\n      if (response.ok) {\n        const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const updatedData = await updatedResponse.json();\n        setStores(updatedData.stores);\n        setStores(updatedData.totalPages);\n        handleCloseModal();\n      } else {\n        console.error('Error saving new store');\n      }\n    } catch (error) {\n      console.error('Error saving new store:', error);\n    }\n  };\n  const handleEditSave = async () => {\n    try {\n      const response = await fetch(`${targetUrl}/${editStoreData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editStoreData)\n      });\n      if (response.ok) {\n        const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const updatedData = await updatedResponse.json();\n        setStores(updatedData.stores);\n        setStores(updatedData.totalPages);\n        setEditModalOpen(false);\n      } else {\n        console.error('Error saving edited store');\n      }\n    } catch (error) {\n      console.error('Error saving edited store:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewStoreData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleEditInputChange = (e, {\n    name,\n    value\n  }) => {\n    setEditStoreData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const renderPagination = () => {\n    const pages = [];\n    for (let page = 1; page <= totalPages; page++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Button, {\n        primary: currentPage === page,\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewStore,\n      children: \"New Store\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: stores.map(store => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: store.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: store.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"edit\",\n              color: \"yellow\",\n              onClick: () => handleEdit(store),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"edit icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"delete\",\n              color: \"red\",\n              onClick: () => openDeleteConfirmation(store.id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"delete icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), renderPagination(), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: newStoreData.name,\n              onChange: handleInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: newStoreData.address,\n              onChange: handleInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveNewStore,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: editModalOpen,\n      onClose: () => setEditModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Edit Store\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: editStoreData.name,\n              onChange: handleEditInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: editStoreData.address,\n              onChange: handleEditInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleEditSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: deleteConfirmationOpen,\n      onClose: () => setDeleteConfirmationOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this store?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: confirmDelete,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteConfirmationOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(StoreList, \"4OJVlRNGI6ckaka+t7Sn+4AqSGA=\");\n_c = StoreList;\nexport default StoreList;\nvar _c;\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","jsxDEV","_jsxDEV","targetUrl","StoreList","_s","stores","setStores","modalOpen","setModalOpen","newStoreData","setNewStoreData","name","address","editModalOpen","setEditModalOpen","editStoreData","setEditStoreData","id","deleteConfirmationOpen","setDeleteConfirmationOpen","storeIdToDelete","setStoreIdToDelete","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","fetch","data","json","error","console","handleEdit","store","openDeleteConfirmation","storeId","confirmDelete","method","ok","updatedResponse","updatedData","handleNewStore","handleCloseModal","handleSaveNewStore","headers","body","JSON","stringify","handleEditSave","handleInputChange","e","value","prevData","handleEditInputChange","handlePageChange","newPage","renderPagination","pages","page","push","primary","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","celled","Header","Row","HeaderCell","Body","map","Cell","icon","color","style","marginRight","open","onClose","Content","Field","onChange","placeholder","Actions","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/storelist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Store';\r\n\r\nconst StoreList = () => {\r\n    const [stores, setStores] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newStoreData, setNewStoreData] = useState({ name: '', address: '' });\r\n\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n    const [editStoreData, setEditStoreData] = useState({ id: null, name: '', address: '' });\r\n\r\n    const [deleteConfirmationOpen, setDeleteConfirmationOpen] = useState(false);\r\n    const [storeIdToDelete, setStoreIdToDelete] = useState(null);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const data = await response.json();\r\n                setStores(data.stores);\r\n                setTotalPages(data.totalPages);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [currentPage]);\r\n\r\n    const handleEdit = (store) => {\r\n        setEditStoreData({\r\n            id: store.id,\r\n            name: store.name,\r\n            address: store.address,\r\n        });\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    const openDeleteConfirmation = (storeId) => {\r\n        setStoreIdToDelete(storeId);\r\n        setDeleteConfirmationOpen(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        if (storeIdToDelete !== null) {\r\n            try {\r\n                const response = await fetch(`${targetUrl}/${storeIdToDelete}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setStores(updatedData.stores);\r\n                    setStores(updatedData.totalPages);\r\n                    \r\n                    setDeleteConfirmationOpen(false);\r\n                } else {\r\n                    console.error('Error deleting store');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error deleting store:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleNewStore = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n        setNewStoreData({ name: '', address: '' });\r\n    };\r\n\r\n    const handleSaveNewStore = async () => {\r\n        try {\r\n            const response = await fetch(targetUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newStoreData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const updatedData = await updatedResponse.json();\r\n                setStores(updatedData.stores);\r\n                setStores(updatedData.totalPages);\r\n\r\n                handleCloseModal();\r\n            } else {\r\n                console.error('Error saving new store');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving new store:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditSave = async () => {\r\n        try {\r\n            const response = await fetch(`${targetUrl}/${editStoreData.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editStoreData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const updatedData = await updatedResponse.json();\r\n                setStores(updatedData.stores);\r\n                setStores(updatedData.totalPages);\r\n\r\n                setEditModalOpen(false);\r\n            } else {\r\n                console.error('Error saving edited store');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving edited store:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, { name, value }) => {\r\n        setNewStoreData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleEditInputChange = (e, { name, value }) => {\r\n        setEditStoreData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const renderPagination = () => {\r\n        const pages = [];\r\n        for (let page = 1; page <= totalPages; page++) {\r\n            pages.push(\r\n                <Button\r\n                    key={page}\r\n                    primary={currentPage === page}\r\n                    onClick={() => handlePageChange(page)}\r\n                >\r\n                    {page}\r\n                </Button>\r\n            );\r\n        }\r\n\r\n        return <div className=\"pagination\">{pages}</div>;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button primary onClick={handleNewStore}>\r\n                New Store\r\n            </Button>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {stores.map((store) => (\r\n                        <Table.Row key={store.id}>\r\n                            <Table.Cell>{store.name}</Table.Cell>\r\n                            <Table.Cell>{store.address}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button icon=\"edit\" color=\"yellow\" onClick={() => handleEdit(store)}>\r\n                                    <i className=\"edit icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button icon=\"delete\" color=\"red\" onClick={() => openDeleteConfirmation(store.id)}>\r\n                                    <i className=\"delete icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            {renderPagination()}\r\n\r\n            <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                <Modal.Header>Create New Store</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={newStoreData.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={newStoreData.address}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleSaveNewStore}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCloseModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={editModalOpen} onClose={() => setEditModalOpen(false)}>\r\n                <Modal.Header>Edit Store</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={editStoreData.name}\r\n                                onChange={handleEditInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={editStoreData.address}\r\n                                onChange={handleEditInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleEditSave}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={() => setEditModalOpen(false)}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={deleteConfirmationOpen} onClose={() => setDeleteConfirmationOpen(false)}>\r\n                <Modal.Header>Confirm Delete</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Are you sure you want to delete this store?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={confirmDelete}>\r\n                        Confirm\r\n                    </Button>\r\n                    <Button onClick={() => setDeleteConfirmationOpen(false)}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StoreList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}