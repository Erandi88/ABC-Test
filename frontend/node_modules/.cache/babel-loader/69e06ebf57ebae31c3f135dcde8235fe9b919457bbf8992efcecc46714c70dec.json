{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input, Menu, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n\n  // New state variables for editing\n  const [editingCustomer, setEditingCustomer] = useState(null);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(targetUrl);\n        const data = await response.json();\n        setCustomers(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDelete = customerId => {\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\n        method: 'GET'\n      });\n      if (confirmResponse.ok) {\n        const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n          setDeletionConfirmation(false);\n        } else {\n          console.error('Error deleting customer');\n        }\n      } else {\n        console.log('Deletion not confirmed.');\n        setDeletionConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewCustomerData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewCustomer = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCustomerData)\n      });\n      if (response.ok) {\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n        handleCloseModal();\n      } else {\n        console.error('Error saving new customer');\n      }\n    } catch (error) {\n      console.error('Error saving new customer:', error);\n    }\n  };\n  const handleEdit = customer => {\n    setEditingCustomer(customer);\n    setEditModalOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setEditModalOpen(false);\n    setEditingCustomer(null);\n  };\n  const handleSaveEditCustomer = async () => {\n    try {\n      console.log(editingCustomer.id);\n      const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editingCustomer)\n      });\n      alert(response.statusText);\n      if (response.ok) {\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n        handleCloseEditModal();\n      } else {\n        console.error('Error editing customer');\n      }\n    } catch (error) {\n      console.error('Error editing customer:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleEditInputChange = (e, {\n    name,\n    value\n  }) => {\n    setEditingCustomer(prevCustomer => ({\n      ...prevCustomer,\n      [name]: value\n    }));\n  };\n  const itemsPerPage = 1; // Change this to the number of items per page\n  const yourData = [1, 2, 3, 7, 9, 0, 5]; // Replace with your data array\n\n  const [activePage, setActivePage] = useState(1);\n  const totalPages = Math.ceil(yourData.length / itemsPerPage);\n  const handlePageChange = (e, {\n    page\n  }) => {\n    setActivePage(page);\n  };\n  const tableRows = paginatedData.map((item, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n    children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewCustomer,\n      children: \"New Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"yellow\",\n              onClick: () => handleEdit(customer),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"edit icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              onClick: () => handleDelete(customer.id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"delete icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Table.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n          colSpan: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Menu, {\n            floated: \"right\",\n            pagination: true,\n            children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n              as: \"a\",\n              icon: true,\n              onClick: handlePageChange,\n              disabled: activePage === 1,\n              page: activePage - 1,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"chevron left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), Array.from({\n              length: totalPages\n            }, (_, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n              as: \"a\",\n              active: index + 1 === activePage,\n              onClick: handlePageChange,\n              page: index + 1,\n              children: index + 1\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this)), /*#__PURE__*/_jsxDEV(Menu.Item, {\n              as: \"a\",\n              icon: true,\n              onClick: handlePageChange,\n              disabled: activePage === totalPages,\n              page: activePage + 1,\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"chevron right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: newCustomerData.name,\n              onChange: handleInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: newCustomerData.address,\n              onChange: handleInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveNewCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: editModalOpen,\n      onClose: handleCloseEditModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Edit Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: editingCustomer ? editingCustomer.name : '',\n              onChange: handleEditInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: editingCustomer ? editingCustomer.address : '',\n              onChange: handleEditInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveEditCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: deletionConfirmation,\n      onClose: () => setDeletionConfirmation(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this customer?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: () => setDeletionConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: confirmDelete,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 13\n  }, this);\n};\n_s(CustomerList, \"+gGkCLFpWN/8G+ZWJahXRL9RyYI=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","Menu","Icon","jsxDEV","_jsxDEV","targetUrl","CustomerList","_s","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","editingCustomer","setEditingCustomer","editModalOpen","setEditModalOpen","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","fetchData","response","fetch","data","json","error","console","handleDelete","customerId","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","log","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleEdit","customer","handleCloseEditModal","handleSaveEditCustomer","id","alert","statusText","handleInputChange","e","value","prevData","handleEditInputChange","prevCustomer","itemsPerPage","yourData","activePage","setActivePage","totalPages","Math","ceil","length","handlePageChange","page","tableRows","paginatedData","map","item","index","Row","children","Cell","fileName","_jsxFileName","lineNumber","columnNumber","description","primary","onClick","celled","Header","HeaderCell","Body","color","className","style","marginRight","Footer","colSpan","floated","pagination","Item","as","icon","disabled","Array","from","_","active","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input, Menu, Icon} from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst CustomerList = () => {\r\n\r\n\r\n\r\n        const [customers, setCustomers] = useState([]);\r\n        const [modalOpen, setModalOpen] = useState(false);\r\n        const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n        // New state variables for editing\r\n        const [editingCustomer, setEditingCustomer] = useState(null);\r\n        const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n        const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n        const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n        useEffect(() => {\r\n            const fetchData = async () => {\r\n                try {\r\n                    const response = await fetch(targetUrl);\r\n                    const data = await response.json();\r\n                    setCustomers(data);\r\n                } catch (error) {\r\n                    console.error('Error fetching data:', error);\r\n                }\r\n            };\r\n\r\n            fetchData();\r\n        }, []);\r\n\r\n        const handleDelete = (customerId) => {\r\n            setCustomerToDelete(customerId);\r\n            setDeletionConfirmation(true);\r\n        };\r\n\r\n        const confirmDelete = async () => {\r\n            try {\r\n                const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'GET',\r\n                });\r\n\r\n                if (confirmResponse.ok) {\r\n                    const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                        method: 'DELETE',\r\n                    });\r\n\r\n                    if (response.ok) {\r\n                        const updatedResponse = await fetch(targetUrl);\r\n                        const updatedData = await updatedResponse.json();\r\n                        setCustomers(updatedData);\r\n                        setDeletionConfirmation(false);\r\n                    } else {\r\n                        console.error('Error deleting customer');\r\n                    }\r\n                } else {\r\n                    console.log('Deletion not confirmed.');\r\n                    setDeletionConfirmation(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error deleting customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleNewCustomer = () => {\r\n            setModalOpen(true);\r\n        };\r\n\r\n        const handleCloseModal = () => {\r\n            setModalOpen(false);\r\n            setNewCustomerData({ name: '', address: '' });\r\n        };\r\n\r\n        const handleSaveNewCustomer = async () => {\r\n            try {\r\n                const response = await fetch(targetUrl, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(newCustomerData),\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n                    handleCloseModal();\r\n                } else {\r\n                    console.error('Error saving new customer');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error saving new customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleEdit = (customer) => {\r\n            setEditingCustomer(customer);\r\n            setEditModalOpen(true);\r\n        };\r\n\r\n        const handleCloseEditModal = () => {\r\n            setEditModalOpen(false);\r\n            setEditingCustomer(null);\r\n        };\r\n\r\n        const handleSaveEditCustomer = async () => {\r\n\r\n            try {\r\n                console.log(editingCustomer.id);\r\n                const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(editingCustomer),\r\n\r\n                });\r\n\r\n                alert(response.statusText);\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n                    handleCloseEditModal();\r\n                } else {\r\n                    console.error('Error editing customer');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error editing customer:', error);\r\n            }\r\n        };\r\n\r\n        const handleInputChange = (e, { name, value }) => {\r\n            setNewCustomerData((prevData) => ({\r\n                ...prevData,\r\n                [name]: value,\r\n            }));\r\n        };\r\n\r\n        const handleEditInputChange = (e, { name, value }) => {\r\n            setEditingCustomer((prevCustomer) => ({\r\n                ...prevCustomer,\r\n                [name]: value,\r\n            }));\r\n        };\r\n    const itemsPerPage = 1; // Change this to the number of items per page\r\n    const yourData = [1, 2, 3, 7, 9, 0, 5]; // Replace with your data array\r\n\r\n\r\n    const [activePage, setActivePage] = useState(1);\r\n    const totalPages = Math.ceil(yourData.length / itemsPerPage);\r\n\r\n    const handlePageChange = (e, { page }) => {\r\n        setActivePage(page);\r\n    };\r\n\r\n   \r\n\r\n    const tableRows = paginatedData.map((item, index) => (\r\n        <Table.Row key={index}>\r\n            <Table.Cell>{item.name}</Table.Cell>\r\n            <Table.Cell>{item.description}</Table.Cell>\r\n            {/* Add more columns for your data */}\r\n        </Table.Row>\r\n    ));\r\n        return (\r\n            <div>\r\n                <Button primary onClick={handleNewCustomer}>\r\n                    New Customer\r\n                </Button>\r\n\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Address</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {customers.map((customer) => (\r\n                            <Table.Row key={customer.id}>\r\n                                <Table.Cell>{customer.name}</Table.Cell>\r\n                                <Table.Cell>{customer.address}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"yellow\" onClick={() => handleEdit(customer)}>\r\n                                        <i className=\"edit icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"red\" onClick={() => handleDelete(customer.id)}>\r\n                                        <i className=\"delete icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan=\"3\">\r\n                            <Menu floated=\"right\" pagination>\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === 1}\r\n                                    page={activePage - 1}\r\n                                >\r\n                                    <Icon name=\"chevron left\" />\r\n                                </Menu.Item>\r\n                                {Array.from({ length: totalPages }, (_, index) => (\r\n                                    <Menu.Item\r\n                                        as=\"a\"\r\n                                        key={index}\r\n                                        active={index + 1 === activePage}\r\n                                        onClick={handlePageChange}\r\n                                        page={index + 1}\r\n                                    >\r\n                                        {index + 1}\r\n                                    </Menu.Item>\r\n                                ))}\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === totalPages}\r\n                                    page={activePage + 1}\r\n                                >\r\n                                    <Icon name=\"chevron right\" />\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n\r\n                <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                    <Modal.Header>Create New Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={newCustomerData.name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={newCustomerData.address}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveNewCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={editModalOpen} onClose={handleCloseEditModal}>\r\n                    <Modal.Header>Edit Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={editingCustomer ? editingCustomer.name : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={editingCustomer ? editingCustomer.address : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveEditCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseEditModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                    <Modal.Header>Confirm Deletion</Modal.Header>\r\n                    <Modal.Content>\r\n                        <p>Are you sure you want to delete this customer?</p>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button positive onClick={confirmDelete}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        );\r\n     \r\n};\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}