{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst Customerlist = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(targetUrl);\n        const data = await response.json();\n        setCustomers(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleEdit = customerId => {\n    // Implement your edit logic here\n    console.log(`Edit customer with ID ${customerId}`);\n  };\n  const handleDelete = customerId => {\n    // Open the delete confirmation modal\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      // Make an API call to confirm the deletion\n      const confirmResponse = await fetch(`${targetUrl}/confirm-delete/${customerToDelete}`, {\n        method: 'GET'\n      });\n      if (confirmResponse.ok) {\n        // Perform the deletion if confirmed\n        const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          // Fetch the updated customer list\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n\n          // Close the confirmation modal\n          setDeletionConfirmation(false);\n        } else {\n          console.error('Error deleting customer');\n        }\n      } else {\n        console.log('Deletion not confirmed.');\n        // Close the confirmation modal\n        setDeletionConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewCustomerData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewCustomer = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCustomerData)\n      });\n      if (response.ok) {\n        // Fetch the updated customer list\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n\n        // Close the modal\n        handleCloseModal();\n      } else {\n        console.error('Error saving new customer');\n      }\n    } catch (error) {\n      console.error('Error saving new customer:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewCustomer,\n      children: \"New Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              icon: \"edit\",\n              color: \"blue\",\n              onClick: () => handleEdit(customer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: \"delete\",\n              color: \"red\",\n              onClick: () => handleDelete(customer.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: newCustomerData.name,\n              onChange: handleInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: newCustomerData.address,\n              onChange: handleInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveNewCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: deletionConfirmation,\n      onClose: () => setDeletionConfirmation(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this customer?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: () => setDeletionConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: confirmDelete,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(Customerlist, \"fS2XYhsRwDFPNEPB2LrCLj4QYG4=\");\n_c = Customerlist;\nexport default Customerlist;\nvar _c;\n$RefreshReg$(_c, \"Customerlist\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","jsxDEV","_jsxDEV","targetUrl","Customerlist","_s","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","fetchData","response","fetch","data","json","error","console","handleEdit","customerId","log","handleDelete","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleInputChange","e","value","prevData","children","primary","onClick","fileName","_jsxFileName","lineNumber","columnNumber","celled","Header","Row","HeaderCell","Body","map","customer","Cell","icon","color","id","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst Customerlist = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n    const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(targetUrl);\r\n                const data = await response.json();\r\n                setCustomers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleEdit = (customerId) => {\r\n        // Implement your edit logic here\r\n        console.log(`Edit customer with ID ${customerId}`);\r\n    };\r\n\r\n    const handleDelete = (customerId) => {\r\n        // Open the delete confirmation modal\r\n        setCustomerToDelete(customerId);\r\n        setDeletionConfirmation(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            // Make an API call to confirm the deletion\r\n            const confirmResponse = await fetch(`${targetUrl}/confirm-delete/${customerToDelete}`, {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (confirmResponse.ok) {\r\n                // Perform the deletion if confirmed\r\n                const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    // Fetch the updated customer list\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n\r\n                    // Close the confirmation modal\r\n                    setDeletionConfirmation(false);\r\n                } else {\r\n                    console.error('Error deleting customer');\r\n                }\r\n            } else {\r\n                console.log('Deletion not confirmed.');\r\n                // Close the confirmation modal\r\n                setDeletionConfirmation(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleNewCustomer = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n        setNewCustomerData({ name: '', address: '' });\r\n    };\r\n\r\n    const handleSaveNewCustomer = async () => {\r\n        try {\r\n            const response = await fetch(targetUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newCustomerData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Fetch the updated customer list\r\n                const updatedResponse = await fetch(targetUrl);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData);\r\n\r\n                // Close the modal\r\n                handleCloseModal();\r\n            } else {\r\n                console.error('Error saving new customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving new customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, { name, value }) => {\r\n        setNewCustomerData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button primary onClick={handleNewCustomer}>\r\n                New Customer\r\n            </Button>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {customers.map((customer) => (\r\n                        <Table.Row key={customer.id}>\r\n                            <Table.Cell>{customer.name}</Table.Cell>\r\n                            <Table.Cell>{customer.address}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button icon=\"edit\" color=\"blue\" onClick={() => handleEdit(customer.id)} />\r\n                                <Button icon=\"delete\" color=\"red\" onClick={() => handleDelete(customer.id)} />\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                <Modal.Header>Create New Customer</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={newCustomerData.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={newCustomerData.address}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleSaveNewCustomer}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCloseModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                <Modal.Header>Confirm Deletion</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Are you sure you want to delete this customer?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button positive onClick={confirmDelete}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customerlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}