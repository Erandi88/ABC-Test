{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n\n  // New state variables for editing\n  const [editingCustomer, setEditingCustomer] = useState(null);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const data = await response.json();\n        setCustomers(data.customers);\n        setTotalPages(data.totalPages);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [currentPage]);\n  const handleDelete = customerId => {\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\n        method: 'GET'\n      });\n      if (confirmResponse.ok) {\n        const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData.customers);\n          setTotalPages(updatedData.totalPages);\n          setDeletionConfirmation(false);\n        } else {\n          console.error('Error deleting customer');\n        }\n      } else {\n        console.log('Deletion not confirmed.');\n        setDeletionConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewCustomerData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewCustomer = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCustomerData)\n      });\n      if (response.ok) {\n        const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData.customers);\n        setTotalPages(updatedData.totalPages);\n        handleCloseModal();\n      } else {\n        console.error('Error saving new customer');\n      }\n    } catch (error) {\n      console.error('Error saving new customer:', error);\n    }\n  };\n  const handleEdit = customer => {\n    setEditingCustomer(customer);\n    setEditModalOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setEditModalOpen(false);\n    setEditingCustomer(null);\n  };\n  const handleSaveEditCustomer = async () => {\n    try {\n      console.log(editingCustomer.id);\n      const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editingCustomer)\n      });\n      alert(response.statusText);\n      if (response.ok) {\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n        handleCloseEditModal();\n      } else {\n        console.error('Error editing customer');\n      }\n    } catch (error) {\n      console.error('Error editing customer:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleEditInputChange = (e, {\n    name,\n    value\n  }) => {\n    setEditingCustomer(prevCustomer => ({\n      ...prevCustomer,\n      [name]: value\n    }));\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const renderPagination = () => {\n    const pages = [];\n    for (let page = 1; page <= totalPages; page++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Button, {\n        primary: currentPage === page,\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewCustomer,\n      children: \"New Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"yellow\",\n              onClick: () => handleEdit(customer),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"edit icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              onClick: () => handleDelete(customer.id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"delete icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), renderPagination(), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: newCustomerData.name,\n              onChange: handleInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: newCustomerData.address,\n              onChange: handleInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveNewCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: editModalOpen,\n      onClose: handleCloseEditModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Edit Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"name\",\n              value: editingCustomer ? editingCustomer.name : '',\n              onChange: handleEditInputChange,\n              placeholder: \"Enter name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"address\",\n              value: editingCustomer ? editingCustomer.address : '',\n              onChange: handleEditInputChange,\n              placeholder: \"Enter address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleSaveEditCustomer,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseEditModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: deletionConfirmation,\n      onClose: () => setDeletionConfirmation(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Deletion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete this customer?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: () => setDeletionConfirmation(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          positive: true,\n          onClick: confirmDelete,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerList, \"iBbF3U9TtzpKUWy4tAaN5iUs6mA=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","jsxDEV","_jsxDEV","targetUrl","CustomerList","_s","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","editingCustomer","setEditingCustomer","editModalOpen","setEditModalOpen","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","fetch","data","json","error","console","handleDelete","customerId","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","log","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleEdit","customer","handleCloseEditModal","handleSaveEditCustomer","id","alert","statusText","handleInputChange","e","value","prevData","handleEditInputChange","prevCustomer","handlePageChange","newPage","renderPagination","pages","page","push","primary","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","celled","Header","Row","HeaderCell","Body","map","Cell","color","style","marginRight","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst CustomerList = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n    // New state variables for editing\r\n    const [editingCustomer, setEditingCustomer] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n    const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const data = await response.json();\r\n                setCustomers(data.customers);\r\n                setTotalPages(data.totalPages);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [currentPage]);\r\n\r\n    const handleDelete = (customerId) => {\r\n        setCustomerToDelete(customerId);\r\n        setDeletionConfirmation(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (confirmResponse.ok) {\r\n                const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData.customers);\r\n                    setTotalPages(updatedData.totalPages);\r\n                    setDeletionConfirmation(false);\r\n                } else {\r\n                    console.error('Error deleting customer');\r\n                }\r\n            } else {\r\n                console.log('Deletion not confirmed.');\r\n                setDeletionConfirmation(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleNewCustomer = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n        setNewCustomerData({ name: '', address: '' });\r\n    };\r\n\r\n    const handleSaveNewCustomer = async () => {\r\n        try {\r\n            const response = await fetch(targetUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newCustomerData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData.customers);\r\n                setTotalPages(updatedData.totalPages);\r\n                handleCloseModal();\r\n            } else {\r\n                console.error('Error saving new customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving new customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (customer) => {\r\n        setEditingCustomer(customer);\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    const handleCloseEditModal = () => {\r\n        setEditModalOpen(false);\r\n        setEditingCustomer(null);\r\n    };\r\n\r\n    const handleSaveEditCustomer = async () => {\r\n\r\n        try {\r\n            console.log(editingCustomer.id);\r\n            const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editingCustomer),\r\n\r\n            });\r\n\r\n            alert(response.statusText);\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(targetUrl);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData);\r\n                handleCloseEditModal();\r\n            } else {\r\n                console.error('Error editing customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error editing customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, { name, value }) => {\r\n        setNewCustomerData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleEditInputChange = (e, { name, value }) => {\r\n        setEditingCustomer((prevCustomer) => ({\r\n            ...prevCustomer,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const renderPagination = () => {\r\n        const pages = [];\r\n        for (let page = 1; page <= totalPages; page++) {\r\n            pages.push(\r\n                <Button\r\n                    key={page}\r\n                    primary={currentPage === page}\r\n                    onClick={() => handlePageChange(page)}\r\n                >\r\n                    {page}\r\n                </Button>\r\n            );\r\n        }\r\n\r\n        return <div className=\"pagination\">{pages}</div>;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button primary onClick={handleNewCustomer}>\r\n                New Customer\r\n            </Button>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {customers.map((customer) => (\r\n                        <Table.Row key={customer.id}>\r\n                            <Table.Cell>{customer.name}</Table.Cell>\r\n                            <Table.Cell>{customer.address}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button color=\"yellow\" onClick={() => handleEdit(customer)}>\r\n                                    <i className=\"edit icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button color=\"red\" onClick={() => handleDelete(customer.id)}>\r\n                                    <i className=\"delete icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            {renderPagination()}\r\n\r\n            <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                <Modal.Header>Create New Customer</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={newCustomerData.name}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={newCustomerData.address}\r\n                                onChange={handleInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleSaveNewCustomer}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCloseModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={editModalOpen} onClose={handleCloseEditModal}>\r\n                <Modal.Header>Edit Customer</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Name</label>\r\n                            <Input\r\n                                name=\"name\"\r\n                                value={editingCustomer ? editingCustomer.name : ''}\r\n                                onChange={handleEditInputChange}\r\n                                placeholder=\"Enter name\"\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Address</label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                value={editingCustomer ? editingCustomer.address : ''}\r\n                                onChange={handleEditInputChange}\r\n                                placeholder=\"Enter address\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button primary onClick={handleSaveEditCustomer}>\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCloseEditModal}>Cancel</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n\r\n            <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                <Modal.Header>Confirm Deletion</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Are you sure you want to delete this customer?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button positive onClick={confirmDelete}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}