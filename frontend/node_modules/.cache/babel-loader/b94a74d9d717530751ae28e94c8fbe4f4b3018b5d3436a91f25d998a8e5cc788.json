{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst CustomerList = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n  const [editingCustomer, setEditingCustomer] = useState(null);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\n        const data = await response.json();\n        setCustomers(data);\n        setTotalPages(data / 10);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, [currentPage]);\n  const handleDelete = customerId => {\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const handlePageChange = newPage => {\n    setCurrentPage(newPage);\n  };\n  const renderPagination = () => {\n    const pages = [];\n    for (let page = 1; page <= totalPages; page++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Button, {\n        primary: currentPage === page,\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  };\n\n  // ... (handleNewCustomer, handleCloseModal, handleSaveNewCustomer, handleEdit, handleCloseEditModal, handleSaveEditCustomer, handleInputChange, and handleEditInputChange methods remain the same)\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleEdit = customer => {\n    setEditingCustomer(customer);\n    setEditModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      onClick: handleNewCustomer,\n      children: \"New Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: customer.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"yellow\",\n              onClick: () => handleEdit(customer),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"edit icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              onClick: () => handleDelete(customer.id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"delete icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: '5px'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, customer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), renderPagination()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomerList, \"iBbF3U9TtzpKUWy4tAaN5iUs6mA=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","jsxDEV","_jsxDEV","targetUrl","CustomerList","_s","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","editingCustomer","setEditingCustomer","editModalOpen","setEditModalOpen","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","currentPage","setCurrentPage","totalPages","setTotalPages","fetchData","response","fetch","data","json","error","console","handleDelete","customerId","handlePageChange","newPage","renderPagination","pages","page","push","primary","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handleNewCustomer","handleEdit","customer","celled","Header","Row","HeaderCell","Body","map","Cell","color","style","marginRight","id","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst CustomerList = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n    const [editingCustomer, setEditingCustomer] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n    const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(`${targetUrl}?page=${currentPage}&pageSize=10`);\r\n                const data = await response.json();\r\n                setCustomers(data);\r\n                setTotalPages(data/10);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [currentPage]);\r\n\r\n    const handleDelete = (customerId) => {\r\n        setCustomerToDelete(customerId);\r\n        setDeletionConfirmation(true);\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n        setCurrentPage(newPage);\r\n    };\r\n\r\n    const renderPagination = () => {\r\n        const pages = [];\r\n        for (let page = 1; page <= totalPages; page++) {\r\n            pages.push(\r\n                <Button\r\n                    key={page}\r\n                    primary={currentPage === page}\r\n                    onClick={() => handlePageChange(page)}\r\n                >\r\n                    {page}\r\n                </Button>\r\n            );\r\n        }\r\n\r\n        return <div className=\"pagination\">{pages}</div>;\r\n    };\r\n\r\n    // ... (handleNewCustomer, handleCloseModal, handleSaveNewCustomer, handleEdit, handleCloseEditModal, handleSaveEditCustomer, handleInputChange, and handleEditInputChange methods remain the same)\r\n    const handleNewCustomer = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleEdit = (customer) => {\r\n        setEditingCustomer(customer);\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button primary onClick={handleNewCustomer}>\r\n                New Customer\r\n            </Button>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Address</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {customers.map((customer) => (\r\n                        <Table.Row key={customer.id}>\r\n                            <Table.Cell>{customer.name}</Table.Cell>\r\n                            <Table.Cell>{customer.address}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button color=\"yellow\" onClick={() => handleEdit(customer)}>\r\n                                    <i className=\"edit icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                <Button color=\"red\" onClick={() => handleDelete(customer.id)}>\r\n                                    <i className=\"delete icon\"></i>\r\n                                    <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                </Button>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n            {renderPagination()}\r\n\r\n            {/* ... Modals for new customer, edit customer, and deletion confirmation remain the same */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}