{"ast":null,"code":"var _jsxFileName = \"E:\\\\Industry Connect\\\\Repo\\\\ReactFirstCode\\\\onboard-react-app\\\\src\\\\components\\\\customerlist.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, Modal, Form, Input, Menu, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst targetUrl = 'https://localhost:7148/api/Customer';\nconst CustomerList = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [customers, setCustomers] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newCustomerData, setNewCustomerData] = useState({\n    name: '',\n    address: ''\n  });\n\n  // New state variables for editing\n  const [editingCustomer, setEditingCustomer] = useState(null);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [deletionConfirmation, setDeletionConfirmation] = useState(false);\n  const [customerToDelete, setCustomerToDelete] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(targetUrl);\n        const data = await response.json();\n        setCustomers(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDelete = customerId => {\n    setCustomerToDelete(customerId);\n    setDeletionConfirmation(true);\n  };\n  const confirmDelete = async () => {\n    try {\n      const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\n        method: 'GET'\n      });\n      if (confirmResponse.ok) {\n        const response = await fetch(`${targetUrl}/${customerToDelete}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          const updatedResponse = await fetch(targetUrl);\n          const updatedData = await updatedResponse.json();\n          setCustomers(updatedData);\n          setDeletionConfirmation(false);\n        } else {\n          console.error('Error deleting customer');\n        }\n      } else {\n        console.log('Deletion not confirmed.');\n        setDeletionConfirmation(false);\n      }\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n    }\n  };\n  const handleNewCustomer = () => {\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    setNewCustomerData({\n      name: '',\n      address: ''\n    });\n  };\n  const handleSaveNewCustomer = async () => {\n    try {\n      const response = await fetch(targetUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newCustomerData)\n      });\n      if (response.ok) {\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n        handleCloseModal();\n      } else {\n        console.error('Error saving new customer');\n      }\n    } catch (error) {\n      console.error('Error saving new customer:', error);\n    }\n  };\n  const handleEdit = customer => {\n    setEditingCustomer(customer);\n    setEditModalOpen(true);\n  };\n  const handleCloseEditModal = () => {\n    setEditModalOpen(false);\n    setEditingCustomer(null);\n  };\n  const handleSaveEditCustomer = async () => {\n    try {\n      console.log(editingCustomer.id);\n      const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editingCustomer)\n      });\n      alert(response.statusText);\n      if (response.ok) {\n        const updatedResponse = await fetch(targetUrl);\n        const updatedData = await updatedResponse.json();\n        setCustomers(updatedData);\n        handleCloseEditModal();\n      } else {\n        console.error('Error editing customer');\n      }\n    } catch (error) {\n      console.error('Error editing customer:', error);\n    }\n  };\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    setNewCustomerData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleEditInputChange = (e, {\n    name,\n    value\n  }) => {\n    setEditingCustomer(prevCustomer => ({\n      ...prevCustomer,\n      [name]: value\n    }));\n  };\n  const PaginatedTable = () => {\n    _s();\n    const [activePage, setActivePage] = useState(1);\n    const totalPages = Math.ceil(yourData.length / itemsPerPage);\n    const handlePageChange = (e, {\n      page\n    }) => {\n      setActivePage(page);\n    };\n    const paginatedData = yourData.slice((activePage - 1) * itemsPerPage, activePage * itemsPerPage);\n    const tableRows = paginatedData.map((item, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: handleNewCustomer,\n        children: \"New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        celled: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: customers.map(customer => /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"yellow\",\n                onClick: () => handleEdit(customer),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"edit icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '5px'\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"red\",\n                onClick: () => handleDelete(customer.id),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"delete icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '5px'\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, customer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            colSpan: \"3\",\n            children: /*#__PURE__*/_jsxDEV(Menu, {\n              floated: \"right\",\n              pagination: true,\n              children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                icon: true,\n                onClick: handlePageChange,\n                disabled: activePage === 1,\n                page: activePage - 1,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"chevron left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), Array.from({\n                length: totalPages\n              }, (_, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                active: index + 1 === activePage,\n                onClick: handlePageChange,\n                page: index + 1,\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this)), /*#__PURE__*/_jsxDEV(Menu.Item, {\n                as: \"a\",\n                icon: true,\n                onClick: handlePageChange,\n                disabled: activePage === totalPages,\n                page: activePage + 1,\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"chevron right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: modalOpen,\n        onClose: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Create New Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: newCustomerData.name,\n                onChange: handleInputChange,\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                value: newCustomerData.address,\n                onChange: handleInputChange,\n                placeholder: \"Enter address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: handleSaveNewCustomer,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: editModalOpen,\n        onClose: handleCloseEditModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Edit Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: editingCustomer ? editingCustomer.name : '',\n                onChange: handleEditInputChange,\n                placeholder: \"Enter name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"address\",\n                value: editingCustomer ? editingCustomer.address : '',\n                onChange: handleEditInputChange,\n                placeholder: \"Enter address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            onClick: handleSaveEditCustomer,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseEditModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: deletionConfirmation,\n        onClose: () => setDeletionConfirmation(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this customer?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            negative: true,\n            onClick: () => setDeletionConfirmation(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            positive: true,\n            onClick: confirmDelete,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  };\n  _s(PaginatedTable, \"1V5FWp8UouhHPM1hVYVqcnKvGgM=\");\n};\n_s2(CustomerList, \"csT/2rcXtwys0krM/iNoKnAdtoE=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Modal","Form","Input","Menu","Icon","jsxDEV","_jsxDEV","targetUrl","CustomerList","_s2","_s","$RefreshSig$","customers","setCustomers","modalOpen","setModalOpen","newCustomerData","setNewCustomerData","name","address","editingCustomer","setEditingCustomer","editModalOpen","setEditModalOpen","deletionConfirmation","setDeletionConfirmation","customerToDelete","setCustomerToDelete","fetchData","response","fetch","data","json","error","console","handleDelete","customerId","confirmDelete","confirmResponse","method","ok","updatedResponse","updatedData","log","handleNewCustomer","handleCloseModal","handleSaveNewCustomer","headers","body","JSON","stringify","handleEdit","customer","handleCloseEditModal","handleSaveEditCustomer","id","alert","statusText","handleInputChange","e","value","prevData","handleEditInputChange","prevCustomer","PaginatedTable","activePage","setActivePage","totalPages","Math","ceil","yourData","length","itemsPerPage","handlePageChange","page","paginatedData","slice","tableRows","map","item","index","Row","children","Cell","fileName","_jsxFileName","lineNumber","columnNumber","description","primary","onClick","celled","Header","HeaderCell","Body","color","className","style","marginRight","Footer","colSpan","floated","pagination","Item","as","icon","disabled","Array","from","_","active","open","onClose","Content","Field","onChange","placeholder","Actions","negative","positive","_c","$RefreshReg$"],"sources":["E:/Industry Connect/Repo/ReactFirstCode/onboard-react-app/src/components/customerlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Form, Input,Menu,Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\nconst targetUrl = 'https://localhost:7148/api/Customer';\r\n\r\nconst CustomerList = () => {\r\n    const [customers, setCustomers] = useState([]);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newCustomerData, setNewCustomerData] = useState({ name: '', address: '' });\r\n\r\n    // New state variables for editing\r\n    const [editingCustomer, setEditingCustomer] = useState(null);\r\n    const [editModalOpen, setEditModalOpen] = useState(false);\r\n\r\n    const [deletionConfirmation, setDeletionConfirmation] = useState(false);\r\n    const [customerToDelete, setCustomerToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch(targetUrl);\r\n                const data = await response.json();\r\n                setCustomers(data);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleDelete = (customerId) => {\r\n        setCustomerToDelete(customerId);\r\n        setDeletionConfirmation(true);\r\n    };\r\n\r\n    const confirmDelete = async () => {\r\n        try {\r\n            const confirmResponse = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                method: 'GET',\r\n            });\r\n\r\n            if (confirmResponse.ok) {\r\n                const response = await fetch(`${targetUrl}/${customerToDelete}`, {\r\n                    method: 'DELETE',\r\n                });\r\n\r\n                if (response.ok) {\r\n                    const updatedResponse = await fetch(targetUrl);\r\n                    const updatedData = await updatedResponse.json();\r\n                    setCustomers(updatedData);\r\n                    setDeletionConfirmation(false);\r\n                } else {\r\n                    console.error('Error deleting customer');\r\n                }\r\n            } else {\r\n                console.log('Deletion not confirmed.');\r\n                setDeletionConfirmation(false);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleNewCustomer = () => {\r\n        setModalOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setModalOpen(false);\r\n        setNewCustomerData({ name: '', address: '' });\r\n    };\r\n\r\n    const handleSaveNewCustomer = async () => {\r\n        try {\r\n            const response = await fetch(targetUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(newCustomerData),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(targetUrl);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData);\r\n                handleCloseModal();\r\n            } else {\r\n                console.error('Error saving new customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error saving new customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (customer) => {\r\n        setEditingCustomer(customer);\r\n        setEditModalOpen(true);\r\n    };\r\n\r\n    const handleCloseEditModal = () => {\r\n        setEditModalOpen(false);\r\n        setEditingCustomer(null);\r\n    };\r\n\r\n    const handleSaveEditCustomer = async () => {\r\n\r\n        try {\r\n            console.log(editingCustomer.id);\r\n            const response = await fetch(`${targetUrl}/${editingCustomer.id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(editingCustomer),\r\n\r\n            });\r\n\r\n            alert(response.statusText);\r\n\r\n            if (response.ok) {\r\n                const updatedResponse = await fetch(targetUrl);\r\n                const updatedData = await updatedResponse.json();\r\n                setCustomers(updatedData);\r\n                handleCloseEditModal();\r\n            } else {\r\n                console.error('Error editing customer');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error editing customer:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, { name, value }) => {\r\n        setNewCustomerData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const handleEditInputChange = (e, { name, value }) => {\r\n        setEditingCustomer((prevCustomer) => ({\r\n            ...prevCustomer,\r\n            [name]: value,\r\n        }));\r\n    };\r\n\r\n    const PaginatedTable = () => {\r\n        const [activePage, setActivePage] = useState(1);\r\n        const totalPages = Math.ceil(yourData.length / itemsPerPage);\r\n\r\n        const handlePageChange = (e, { page }) => {\r\n            setActivePage(page);\r\n        };\r\n\r\n        const paginatedData = yourData.slice(\r\n            (activePage - 1) * itemsPerPage,\r\n            activePage * itemsPerPage\r\n        );\r\n\r\n        const tableRows = paginatedData.map((item, index) => (\r\n            <Table.Row key={index}>\r\n                <Table.Cell>{item.name}</Table.Cell>\r\n                <Table.Cell>{item.description}</Table.Cell>\r\n                {/* Add more columns for your data */}\r\n            </Table.Row>\r\n        ));\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Button primary onClick={handleNewCustomer}>\r\n                    New Customer\r\n                </Button>\r\n\r\n                <Table celled>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Name</Table.HeaderCell>\r\n                            <Table.HeaderCell>Address</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {customers.map((customer) => (\r\n                            <Table.Row key={customer.id}>\r\n                                <Table.Cell>{customer.name}</Table.Cell>\r\n                                <Table.Cell>{customer.address}</Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"yellow\" onClick={() => handleEdit(customer)}>\r\n                                        <i className=\"edit icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Edit</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                                <Table.Cell>\r\n                                    <Button color=\"red\" onClick={() => handleDelete(customer.id)}>\r\n                                        <i className=\"delete icon\"></i>\r\n                                        <span style={{ marginRight: '5px' }}>Delete</span>\r\n                                    </Button>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n                <Table.Footer>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell colSpan=\"3\">\r\n                            <Menu floated=\"right\" pagination>\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === 1}\r\n                                    page={activePage - 1}\r\n                                >\r\n                                    <Icon name=\"chevron left\" />\r\n                                </Menu.Item>\r\n                                {Array.from({ length: totalPages }, (_, index) => (\r\n                                    <Menu.Item\r\n                                        as=\"a\"\r\n                                        key={index}\r\n                                        active={index + 1 === activePage}\r\n                                        onClick={handlePageChange}\r\n                                        page={index + 1}\r\n                                    >\r\n                                        {index + 1}\r\n                                    </Menu.Item>\r\n                                ))}\r\n                                <Menu.Item\r\n                                    as=\"a\"\r\n                                    icon\r\n                                    onClick={handlePageChange}\r\n                                    disabled={activePage === totalPages}\r\n                                    page={activePage + 1}\r\n                                >\r\n                                    <Icon name=\"chevron right\" />\r\n                                </Menu.Item>\r\n                            </Menu>\r\n                        </Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Footer>\r\n\r\n                <Modal open={modalOpen} onClose={handleCloseModal}>\r\n                    <Modal.Header>Create New Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={newCustomerData.name}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={newCustomerData.address}\r\n                                    onChange={handleInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveNewCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={editModalOpen} onClose={handleCloseEditModal}>\r\n                    <Modal.Header>Edit Customer</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Form.Field>\r\n                                <label>Name</label>\r\n                                <Input\r\n                                    name=\"name\"\r\n                                    value={editingCustomer ? editingCustomer.name : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter name\"\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <label>Address</label>\r\n                                <Input\r\n                                    name=\"address\"\r\n                                    value={editingCustomer ? editingCustomer.address : ''}\r\n                                    onChange={handleEditInputChange}\r\n                                    placeholder=\"Enter address\"\r\n                                />\r\n                            </Form.Field>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button primary onClick={handleSaveEditCustomer}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleCloseEditModal}>Cancel</Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n\r\n                <Modal open={deletionConfirmation} onClose={() => setDeletionConfirmation(false)}>\r\n                    <Modal.Header>Confirm Deletion</Modal.Header>\r\n                    <Modal.Content>\r\n                        <p>Are you sure you want to delete this customer?</p>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button negative onClick={() => setDeletionConfirmation(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button positive onClick={confirmDelete}>\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default CustomerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}